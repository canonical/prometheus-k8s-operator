options:
  prometheus-image-username:
    type: string
    description: |
      The username for accessing the registry specified in
      prometheus-image-path.
    default: ""
  prometheus-image-password:
    type: string
    description: |
      The password associated with prometheus-image-username for
      accessing the registry specified in prometheus-image-path.
    default: ""
  port:
    description: The port prometheus will be listening on
    type: int
    default: 9090
  ssl-cert:
    type: string
    default:
    description: |
      SSL certificate to install and use for Prometheus endpoint.
  ssl-key:
    type: string
    default:
    description: |
      SSL key to use with certificate specified as ssl-cert.
  log-level:
    description: |
      Prometheus server log level (only log messages with the given severity
      or above). Must be one of: [debug, info, warn, error, fatal].
      If not set, the Prometheus default one (info) will be used.
    type: string
    default:
  web-external-url:
    description: |
      The URL under which Prometheus is externally reachable (for example,
      if Prometheus is served via a reverse proxy).
      Used for generating relative and absolute links back to
      Prometheus itself. If the URL has a path portion, it will be used to
      prefix all HTTP endpoints served by Prometheus.

      If omitted, relevant URL components will be derived automatically.
    type: string
    default: ""
  tsdb-retention-time:
    description: |
      How long to retain samples in the storage.
      Units Supported: y, w, d, h, m, s
    type: string
    default: 15d
  tsdb-wal-compression:
    description: |
      This flag enables compression of the write-ahead log (WAL).
      Depending on your data, you can expect the WAL size to be
      halved with little extra cpu load.
    type: boolean
    default: false
  external-labels:
    description: |
      A JSON string of key-value pairs that specify the labels to
      attach to metrics in this Prometheus instance when they get pulled
      by an aggregating parent. This is useful in the case of federation
      where, for example, you want each datacenter to have its own
      Prometheus instance and then have a global instance that pulls from
      each of these datacenter instances. By specifying a unique set of
      external-labels for each datacenter instance, you can easily determine
      in the aggregating Prometheus instance which datacenter a metric is
      coming from. Note that you are not limited to one instance per
      datacenter. The datacenter example here is arbitrary and you are free
      to organize your federation's hierarchy as you see fit.
      Ex. '{ "cluster": "datacenter1" }'. Both keys and values may be
      arbitrarily chosen as you see fit.
    type: string
    default: "{}"
  scrape-interval:
    description: |
      How frequently to scrape targets by default.
    type: string
    default: 1m
  scrape-timeout:
    description: |
      How long until a scrape request times out.
    type: string
    default: 10s
  scrape-config:
    description: |
      Prometheus scrape configuration in YAML format
    type: string
  evaluation-interval:
    description: |
      How frequently rules will be evaluated.
    type: string
    default: 1m

