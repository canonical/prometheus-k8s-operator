# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.
name: prometheus-k8s
assumes:
  - k8s-api

  # Juju 3.0.3+ needed for secrets and open-port
  - juju >= 3.0.3

summary: Prometheus for Kubernetes clusters

description: |
  Prometheus is an open source monitoring solution. Prometheus
  supports aggregating high dimensional data and exposes a powerful
  query language PromQL. This charm deploys and operates Prometheus on
  Kubernetes clusters. Prometheus can raise alerts through a relation
  with the Alertmanager charm. Alerting rules for Prometheus need to
  be provided through a relation with the application that requires
  alerting. Prometheus provides its own dashboard for data
  visualization but a richer visualization interface may be obtained
  through a relation with the Grafana charm.

website: https://charmhub.io/prometheus-k8s
source: https://github.com/canonical/prometheus-k8s-operator
issues: https://github.com/canonical/prometheus-k8s-operator/issues
docs: https://discourse.charmhub.io/t/prometheus-k8s-docs-index/5803

containers:
  prometheus:
    resource: prometheus-image
    mounts:
      - storage: database
        location: /var/lib/prometheus

provides:
  self-metrics-endpoint:
    interface: prometheus_scrape
  grafana-source:
    interface: grafana_datasource
  grafana-dashboard:
    interface: grafana_dashboard
  receive-remote-write:
    interface: prometheus_remote_write

requires:
  metrics-endpoint:
    interface: prometheus_scrape
  alertmanager:
    interface: alertmanager_dispatch
  ingress:
    interface: ingress_per_unit
    limit: 1
  catalogue:
    interface: catalogue
  certificates:
    interface: tls-certificates
    limit: 1
    description: |
      Obtain a CA and a server certificate for Prometheus to use for TLS.
      The same CA cert is used for all in-cluster requests, e.g.:
      - (client) scraping targets for self-monitoring
      - (client) posting alerts to alertmanager server
      - (server) serving data to grafana
  tracing:
    interface: tracing
    limit: 1

peers:
  prometheus-peers:
    interface: prometheus_peers

storage:
  database:
    type: filesystem

resources:
  prometheus-image:
    type: oci-image
    description: Container image for Prometheus
    # Use ghcr image until the missing udpate-ca-certificates issue is resolved.
    # https://github.com/canonical/prometheus-rock/issues/33
    #upstream-source: ghcr.io/canonical/prometheus:dev
    upstream-source: ubuntu/prometheus:2-22.04
